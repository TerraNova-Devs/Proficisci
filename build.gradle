plugins {
    id 'java'
    id "io.github.goooler.shadow" version "8.1.8"
}

group = 'de.mcterranova.proficisci'
version = '1.0.0'

def envProperties = new Properties()
def envPropertiesFile = file('private.env')
envPropertiesFile.withReader('UTF-8') { reader ->
    envProperties.load(reader)
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'enginehub-repo'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        name = "Oraxen"
        url "https://repo.oraxen.com/releases"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Pl3xMap"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter { includeGroup "maven.modrinth" }
    }
    maven {
        name = "github"
        url = "https://maven.pkg.github.com/TerraNova-Devs/TerranovaLib"
        credentials {
            username = project.findProperty(envProperties.getProperty('githubUser'))
            password = project.findProperty(envProperties.getProperty('githubToken'))
        }
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    implementation('com.zaxxer:HikariCP:5.0.1')
    compileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.11-SNAPSHOT')
    implementation 'org.ow2.asm:asm:9.4'
    compileOnly 'io.th0rgal:oraxen:1.180.0'
    compileOnly fileTree(dir: 'jars', include: ['*.jar'])
    compileOnly("maven.modrinth:pl3xmap:1.21-500")
    compileOnly 'de.mcterranova:terranova-lib:0.5.0'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties(props)
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand(props)
    }
}

shadowJar {
    relocate 'com.zaxxer.hikari', 'de.mcterranova.proficisci.shaded.hikari'
    destinationDirectory.set(file("./build/libs"))
    archiveClassifier.set('all')
}

tasks.build {
    dependsOn tasks.shadowJar
}
